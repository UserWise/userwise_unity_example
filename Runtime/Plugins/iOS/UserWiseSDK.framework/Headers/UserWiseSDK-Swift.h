#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
#ifndef USERWISESDK_SWIFT_H
#define USERWISESDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="UserWiseSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

enum VariableType : NSInteger;

SWIFT_CLASS_NAMED("Variable")
@interface Variable : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) enum VariableType type;
@property (nonatomic) id _Nullable defaultValue;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name type:(enum VariableType)type defaultValue:(id _Nullable)defaultValue OBJC_DESIGNATED_INITIALIZER;
- (void)resetToDefault;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("BooleanVariable")
@interface BooleanVariable : Variable
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name defaultValue:(BOOL)defaultValue OBJC_DESIGNATED_INITIALIZER;
- (BOOL)getValue SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name type:(enum VariableType)type defaultValue:(id _Nullable)defaultValue SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("DatetimeVariable")
@interface DatetimeVariable : Variable
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name defaultValue:(NSDate * _Nullable)defaultValue OBJC_DESIGNATED_INITIALIZER;
- (NSDate * _Nullable)getValue SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name type:(enum VariableType)type defaultValue:(id _Nullable)defaultValue SWIFT_UNAVAILABLE;
@end

@protocol UserWiseEventDelegate;
@class GameEvent;

/// EventsModule
/// Central interface used when working with UserWise events.
SWIFT_CLASS("_TtC11UserWiseSDK12EventsModule")
@interface EventsModule : NSObject
@property (nonatomic, strong) id <UserWiseEventDelegate> _Nullable offerDelegate;
- (NSArray<GameEvent *> * _Nonnull)getAllActive SWIFT_WARN_UNUSED_RESULT;
- (NSArray<GameEvent *> * _Nonnull)getAllUpcoming SWIFT_WARN_UNUSED_RESULT;
- (GameEvent * _Nullable)getEventById:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
- (GameEvent * _Nullable)getEventByExternalId:(NSString * _Nonnull)externalId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_PROTOCOL_NAMED("UserWiseStateDelegate")
@protocol UserWiseStateDelegate
- (void)onStartWithSessionInitialized:(BOOL)sessionInitialized;
- (void)onSessionInitializationAttemptFailed;
- (void)onSessionInitializedWithSessionId:(NSString * _Nonnull)sessionId;
- (void)onStop;
@end


@interface EventsModule (SWIFT_EXTENSION(UserWiseSDK)) <UserWiseStateDelegate>
- (void)onSessionInitializationAttemptFailed;
- (void)onSessionInitializedWithSessionId:(NSString * _Nonnull)sessionId;
- (void)onStartWithSessionInitialized:(BOOL)sessionInitialized;
- (void)onStop;
@end


SWIFT_CLASS_NAMED("FileVariable")
@interface FileVariable : Variable
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)getValue SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name type:(enum VariableType)type defaultValue:(id _Nullable)defaultValue SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("FloatVariable")
@interface FloatVariable : Variable
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name defaultValue:(float)defaultValue OBJC_DESIGNATED_INITIALIZER;
- (float)getValue SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name type:(enum VariableType)type defaultValue:(id _Nullable)defaultValue SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("GameEvent")
@interface GameEvent : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull data;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull external_id;
@property (nonatomic, readonly, copy) NSString * _Nonnull external_event_type;
@property (nonatomic, readonly, copy) NSDate * _Nullable start_at;
@property (nonatomic, readonly, copy) NSString * _Nonnull start_at_tz;
@property (nonatomic, readonly, copy) NSDate * _Nullable end_at;
@property (nonatomic, readonly, copy) NSString * _Nonnull end_at_tz;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("IntegerVariable")
@interface IntegerVariable : Variable
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name defaultValue:(NSInteger)defaultValue OBJC_DESIGNATED_INITIALIZER;
- (NSInteger)getValue SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name type:(enum VariableType)type defaultValue:(id _Nullable)defaultValue SWIFT_UNAVAILABLE;
@end

@class MediaVariant;

SWIFT_CLASS_NAMED("MediaInfo")
@interface MediaInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull content_type;
@property (nonatomic, readonly, copy) NSString * _Nonnull url;
@property (nonatomic, readonly) NSInteger byte_size;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, MediaVariant *> * _Nullable variants;
@end


SWIFT_CLASS_NAMED("MediaVariant")
@interface MediaVariant : NSObject
@property (nonatomic, readonly) NSInteger max_height;
@property (nonatomic, readonly) NSInteger max_width;
@property (nonatomic, readonly, copy) NSString * _Nonnull url;
@end


SWIFT_CLASS_NAMED("Message")
@interface Message : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSString * _Nonnull body;
@property (nonatomic, readonly, copy) NSString * _Nonnull portraitImageId;
@property (nonatomic, readonly, copy) NSString * _Nonnull landscapeImageId;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull additionalFields;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol UserWiseMessageDelegate;

/// MessagesModule
/// Central interface used when working with UserWise messages
SWIFT_CLASS_NAMED("MessagesModule")
@interface MessagesModule : NSObject
@property (nonatomic, strong) id <UserWiseMessageDelegate> _Nullable messageDelegate;
- (NSArray<Message *> * _Nonnull)getAllActive SWIFT_WARN_UNUSED_RESULT;
- (NSArray<Message *> * _Nonnull)getAllUpcoming SWIFT_WARN_UNUSED_RESULT;
- (Message * _Nullable)getMessageById:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
- (void)setMessageAsViewedWithMessage:(Message * _Nonnull)message;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface MessagesModule (SWIFT_EXTENSION(UserWiseSDK)) <UserWiseStateDelegate>
- (void)onSessionInitializationAttemptFailed;
- (void)onStartWithSessionInitialized:(BOOL)sessionInitialized;
- (void)onSessionInitializedWithSessionId:(NSString * _Nonnull)sessionId;
- (void)onStop;
@end


SWIFT_CLASS_NAMED("Offer")
@interface Offer : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSString * _Nonnull body;
@property (nonatomic, readonly, copy) NSString * _Nonnull portraitImageId;
@property (nonatomic, readonly, copy) NSString * _Nonnull landscapeImageId;
@property (nonatomic, readonly) double cost;
@property (nonatomic, readonly, copy) NSString * _Nonnull iOSProductId;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSNumber *> * _Nonnull currencies;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSNumber *> * _Nonnull items;
@property (nonatomic, readonly, copy) NSDate * _Nullable start_at;
@property (nonatomic, readonly, copy) NSString * _Nonnull start_at_tz;
@property (nonatomic, readonly, copy) NSDate * _Nullable end_at;
@property (nonatomic, readonly, copy) NSString * _Nonnull end_at_tz;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum OfferImpressionState : NSInteger;

SWIFT_CLASS_NAMED("OfferImpression")
@interface OfferImpression : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum OfferImpressionState state;
@property (nonatomic, readonly, strong) Offer * _Nonnull offer;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, OfferImpressionState, "OfferImpressionState", open) {
  OfferImpressionStateInitialized = 0,
  OfferImpressionStateViewed = 1,
  OfferImpressionStateDismissed = 2,
  OfferImpressionStateAccepted = 3,
  OfferImpressionStatePurchaseFailed = 4,
  OfferImpressionStatePurchased = 5,
  OfferImpressionStateUnknown = 6,
};

@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC11UserWiseSDK20OfferPopupController")
@interface OfferPopupController : UIViewController
+ (OfferPopupController * _Nonnull)loadControllerWithOfferImpression:(OfferImpression * _Nullable)offerImpression offerUrl:(NSString * _Nonnull)offerUrl SWIFT_WARN_UNUSED_RESULT;
- (void)loadView;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS_NAMED("OfferPopupManager")
@interface OfferPopupManager : NSObject
+ (OfferPopupController * _Nullable)showOfferWithOfferImpression:(OfferImpression * _Nullable)offerImpression offerUrl:(NSString * _Nonnull)offerUrl SWIFT_WARN_UNUSED_RESULT;
+ (void)hideOffer;
+ (BOOL)isAnOfferDisplayed SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, OfferViewAttemptFailedReason, "OfferViewAttemptFailedReason", open) {
  OfferViewAttemptFailedReasonOfferAlreadyActive = 0,
  OfferViewAttemptFailedReasonServerError = 1,
};

@protocol UserWiseOfferDelegate;

/// OffersModulue
/// Central interface used when working with UserWise offerss.
SWIFT_CLASS("_TtC11UserWiseSDK12OffersModule")
@interface OffersModule : NSObject
@property (nonatomic, strong) id <UserWiseOfferDelegate> _Nullable offerDelegate;
- (NSArray<Offer *> * _Nonnull)getAllActive SWIFT_WARN_UNUSED_RESULT;
- (NSArray<Offer *> * _Nonnull)getAllUpcoming SWIFT_WARN_UNUSED_RESULT;
- (Offer * _Nullable)getOfferById:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isAnOfferActive SWIFT_WARN_UNUSED_RESULT;
- (void)initializeOfferImpressionWithOffer:(Offer * _Nonnull)offer;
- (void)updateOfferImpressionStateWithOfferImpression:(OfferImpression * _Nonnull)offerImpression newState:(enum OfferImpressionState)newState;
- (void)showOfferWithOfferImpression:(OfferImpression * _Nonnull)offerImpression;
- (void)dismissOfferWithOfferImpression:(OfferImpression * _Nullable)offerImpression;
- (void)acceptOfferWithOfferImpression:(OfferImpression * _Nullable)offerImpression;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface OffersModule (SWIFT_EXTENSION(UserWiseSDK)) <UserWiseStateDelegate>
- (void)onSessionInitializationAttemptFailed;
- (void)onSessionInitializedWithSessionId:(NSString * _Nonnull)sessionId;
- (void)onStartWithSessionInitialized:(BOOL)sessionInitialized;
- (void)onStop;
@end


SWIFT_CLASS_NAMED("StringVariable")
@interface StringVariable : Variable
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name defaultValue:(NSString * _Nullable)defaultValue OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)getValue SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name type:(enum VariableType)type defaultValue:(id _Nullable)defaultValue SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("Survey")
@interface Survey : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) NSInteger questionsCount;
@property (nonatomic, readonly, copy) NSDate * _Nullable start_at;
@property (nonatomic, readonly, copy) NSString * _Nonnull start_at_tz;
@property (nonatomic, readonly, copy) NSDate * _Nullable end_at;
@property (nonatomic, readonly, copy) NSString * _Nonnull end_at_tz;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIColor;
@class UIImage;

SWIFT_CLASS("_TtC11UserWiseSDK24SurveySplashScreenStyles")
@interface SurveySplashScreenStyles : NSObject
@property (nonatomic, strong) UIColor * _Nullable primaryColor;
@property (nonatomic, strong) UIColor * _Nonnull splashScreenBackgroundColor;
@property (nonatomic, strong) UIImage * _Nullable logo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11UserWiseSDK23SurveyWebViewController")
@interface SurveyWebViewController : UIViewController
+ (void)loadControllerWithSurvey:(Survey * _Nonnull)survey surveyUrl:(NSString * _Nonnull)surveyUrl splashScreenStyles:(SurveySplashScreenStyles * _Nonnull)splashScreenStyles responseId:(NSString * _Nonnull)responseId;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



@protocol UserWiseSurveyDelegate;

/// SurveysModule
/// Central interface used when working with UserWise surveys & polls..
SWIFT_CLASS_NAMED("SurveysModule")
@interface SurveysModule : NSObject
@property (nonatomic, readonly, strong) SurveySplashScreenStyles * _Nonnull styleConfiguration;
@property (nonatomic, strong) id <UserWiseSurveyDelegate> _Nullable surveyDelegate;
@property (nonatomic) BOOL isTakingSurvey;
- (NSArray<Survey *> * _Nonnull)getAllActive SWIFT_WARN_UNUSED_RESULT;
- (NSArray<Survey *> * _Nonnull)getAllUpcoming SWIFT_WARN_UNUSED_RESULT;
- (Survey * _Nullable)getSurveyById:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
- (void)setSplashScreenLogo:(UIImage * _Nonnull)logo;
- (void)setColorsWithPrimaryColor:(UIColor * _Nullable)primaryColor splashScreenBackgroundColor:(UIColor * _Nullable)splashScreenBackgroundColor;
- (void)initializeSurveyInviteWithSurvey:(Survey * _Nonnull)survey;
- (void)initializeSurveyInviteWithSurvey:(Survey * _Nonnull)survey responseId:(NSString * _Nonnull)responseId;
- (void)setSurveyInviteResponseWithSurvey:(Survey * _Nonnull)survey responseId:(NSString * _Nonnull)responseId inviteId:(NSString * _Nonnull)inviteId wasAccepted:(BOOL)wasAccepted;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface SurveysModule (SWIFT_EXTENSION(UserWiseSDK)) <UserWiseStateDelegate>
- (void)onSessionInitializationAttemptFailed;
- (void)onSessionInitializedWithSessionId:(NSString * _Nonnull)sessionId;
- (void)onStartWithSessionInitialized:(BOOL)sessionInitialized;
- (void)onStop;
@end




@class VariablesModule;
@protocol UserWiseMediaInfoDelegate;
@protocol UserWiseMediaRawDataHandler;

SWIFT_CLASS_NAMED("UserWise")
@interface UserWise : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull sdkVersion;
@property (nonatomic, copy) NSArray<id <UserWiseStateDelegate>> * _Nonnull stateDelegates;
@property (nonatomic, readonly, strong) SurveysModule * _Nullable surveysModule;
@property (nonatomic, readonly, strong) OffersModule * _Nullable offersModule;
@property (nonatomic, readonly, strong) MessagesModule * _Nullable messagesModule;
@property (nonatomic, readonly, strong) VariablesModule * _Nullable variablesModule;
@property (nonatomic, readonly, strong) EventsModule * _Nullable eventsModule;
@property (nonatomic, readonly) BOOL isRunning;
@property (nonatomic, copy) NSURL * _Nullable hostOverride;
@property (nonatomic) BOOL debugMode;
- (void)setApiKey:(NSString * _Nonnull)apiKey;
@property (nonatomic, copy) NSString * _Nullable userId;
@property (nonatomic, copy) NSString * _Nullable sessionId;
- (UserWise * _Nonnull)initializeWithApiKey:(NSString * _Nonnull)apiKey userId:(NSString * _Nonnull)userId SWIFT_WARN_UNUSED_RESULT;
- (void)onStart;
- (void)onStop;
- (BOOL)isSessionInitialized SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isAnyContentActive SWIFT_WARN_UNUSED_RESULT;
- (void)getMediaWithMediaId:(NSString * _Nonnull)mediaId handler:(id <UserWiseMediaInfoDelegate> _Nonnull)handler;
- (void)loadBitMapFromMediaId:(NSString * _Nonnull)mediaId ignoreCache:(BOOL)ignoreCache handler:(id <UserWiseMediaRawDataHandler> _Nonnull)handler;
- (void)loadBitMapFromUrl:(NSString * _Nonnull)url ignoreCache:(BOOL)ignoreCache handler:(id <UserWiseMediaRawDataHandler> _Nonnull)handler;
- (void)assignEvent:(NSString * _Nonnull)eventName attributes:(NSDictionary<NSString *, id> * _Nullable)attributes;
- (void)setAttributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UserWise * _Nonnull sharedInstance;)
+ (UserWise * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Implementation interface for the UserWise offer’s module events.  This interface allows hooking into any
/// parts of the offer events flow.  At a minimum, onOfferAvailable <em>MUST</em> be implemented.
SWIFT_PROTOCOL_NAMED("UserWiseEventDelegate")
@protocol UserWiseEventDelegate
/// Called once events have been loaded from either the API or local cache
- (void)onEventsLoadedFromCache:(BOOL)fromCache;
/// Called when an event has been loaded and is active
/// Likely:  Called when an event becomes active within the SDK
- (void)onEventActiveWithEvent:(GameEvent * _Nonnull)event;
@end


SWIFT_PROTOCOL_NAMED("UserWiseMediaInfoDelegate")
@protocol UserWiseMediaInfoDelegate
- (void)onSuccessWithMediaInfo:(MediaInfo * _Nonnull)mediaInfo;
- (void)onFailure;
@end


SWIFT_PROTOCOL_NAMED("UserWiseMediaRawDataHandler")
@protocol UserWiseMediaRawDataHandler
- (void)onMediaDownloadSuccessWithData:(NSData * _Nonnull)data;
- (void)onMediaDownloadFailure;
@end


SWIFT_PROTOCOL_NAMED("UserWiseMessageDelegate")
@protocol UserWiseMessageDelegate
/// Called once message(s) have been loaded from either the API or local cache
- (void)onMessagesLoadedFromCache:(BOOL)fromCache;
/// Called when message(s) are available for the appuser.
- (void)onMessageAvailableWithMessage:(Message * _Nonnull)message;
@end


/// Implementation interface for the UserWise offer’s module events.  This interface allows hooking into any
/// parts of the offer events flow.  At a minimum, onOfferAvailable <em>MUST</em> be implemented.
SWIFT_PROTOCOL_NAMED("UserWiseOfferDelegate")
@protocol UserWiseOfferDelegate
- (void)onOffersLoaded;
/// Called after a poll attempt that returns <em>NO</em> available offers.
- (void)onOfferUnavailable;
/// Called after a poll attempt that returns an available offer.
- (void)onOfferAvailableWithOffer:(Offer * _Nonnull)offer;
/// Called when an offer impression initialization request fails.
- (void)onOfferImpressionInitializationFailedWithOffer:(Offer * _Nonnull)offer;
/// Called when an offer impression has been successfully initialized
- (void)onOfferImpressionInitialized:(OfferImpression * _Nonnull)offerImpression;
/// Called once the offer’s WebView has successfully loaded, and is being displayed
- (void)onOfferViewedWithOfferImpression:(OfferImpression * _Nullable)offerImpression;
/// Called if UserWise failed to load the offer
- (void)onOfferViewAttemptFailedWithOfferImpression:(OfferImpression * _Nullable)offerImpression reason:(enum OfferViewAttemptFailedReason)reason;
/// Called when the offer WebView has been dismissed (only when <em>NOT</em> accepted);
- (void)onOfferDismissedWithOfferImpression:(OfferImpression * _Nullable)offerImpression;
/// Called whent he offer WebView accept CTA has been tapped.
- (void)onOfferAcceptedWithOfferImpression:(OfferImpression * _Nullable)offerImpression;
@end



SWIFT_PROTOCOL_NAMED("UserWiseSurveyDelegate")
@protocol UserWiseSurveyDelegate
- (void)onSurveysLoaded;
/// Called when survey(s) are available for the appuser.
- (void)onSurveyAvailableWithSurvey:(Survey * _Nonnull)survey;
/// Called when the survey invite initialization was processed.
- (void)onSurveyInviteInitializedWithSurvey:(Survey * _Nonnull)survey wasInitialized:(BOOL)wasInitialized responseId:(NSString * _Nullable)responseId inviteId:(NSString * _Nullable)inviteId;
/// Called when the app user is entering into our survey user flow.
- (void)onSurveyEnteredWithSurvey:(Survey * _Nonnull)survey responseId:(NSString * _Nonnull)responseId;
/// Called when survey failed to load.
- (void)onSurveyEnterFailedWithSurvey:(Survey * _Nonnull)survey responseId:(NSString * _Nonnull)responseId;
/// Called when the user has exited our survey user flow. May or may not be accompanied by onSurveyCompleted()
- (void)onSurveyClosedWithSurvey:(Survey * _Nonnull)survey responseId:(NSString * _Nonnull)responseId;
/// Called when the user has successfully completed a survey
- (void)onSurveyCompletedWithSurvey:(Survey * _Nonnull)survey responseId:(NSString * _Nonnull)responseId;
@end


SWIFT_CLASS_NAMED("UserWiseUtility")
@interface UserWiseUtility : NSObject
+ (NSString * _Nullable)getCountry SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getOsVersion SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getPhoneCarrier SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getDeviceType SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getTimeZoneIdentifier SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getIDFA SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getLanguage SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getConnectionType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL_NAMED("UserWiseVariablesDelegate")
@protocol UserWiseVariablesDelegate
- (void)onVariablesLoadedFromCache:(BOOL)fromCache;
@end


typedef SWIFT_ENUM_NAMED(NSInteger, VariableType, "VariableType", open) {
  VariableTypeString = 0,
  VariableTypeInteger = 1,
  VariableTypeFloat = 2,
  VariableTypeDatetime = 3,
  VariableTypeBoolean = 4,
  VariableTypeFile = 5,
};


SWIFT_CLASS("_TtC11UserWiseSDK15VariablesModule")
@interface VariablesModule : NSObject
@property (nonatomic, strong) id <UserWiseVariablesDelegate> _Nullable variablesDelegate;
- (Variable * _Nullable)getVariableDefinitionWithName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (BOOL)defineWithVariables:(NSArray<Variable *> * _Nonnull)variables error:(NSError * _Nullable * _Nullable)error;
- (Variable * _Nullable)defineVariableWithName:(NSString * _Nonnull)name type:(enum VariableType)type defaultValue:(id _Nullable)defaultValue error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Variable * _Nullable)define:(Variable * _Nonnull)variable error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getModuleName SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface VariablesModule (SWIFT_EXTENSION(UserWiseSDK)) <UserWiseStateDelegate>
- (void)onStartWithSessionInitialized:(BOOL)sessionInitialized;
- (void)onSessionInitializationAttemptFailed;
- (void)onSessionInitializedWithSessionId:(NSString * _Nonnull)sessionId;
- (void)onStop;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
#ifndef USERWISESDK_SWIFT_H
#define USERWISESDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="UserWiseSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

enum VariableType : NSInteger;

SWIFT_CLASS_NAMED("Variable")
@interface Variable : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) enum VariableType type;
@property (nonatomic) id _Nullable defaultValue;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name type:(enum VariableType)type defaultValue:(id _Nullable)defaultValue OBJC_DESIGNATED_INITIALIZER;
- (void)resetToDefault;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("BooleanVariable")
@interface BooleanVariable : Variable
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name defaultValue:(BOOL)defaultValue OBJC_DESIGNATED_INITIALIZER;
- (BOOL)getValue SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name type:(enum VariableType)type defaultValue:(id _Nullable)defaultValue SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("DatetimeVariable")
@interface DatetimeVariable : Variable
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name defaultValue:(NSDate * _Nullable)defaultValue OBJC_DESIGNATED_INITIALIZER;
- (NSDate * _Nullable)getValue SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name type:(enum VariableType)type defaultValue:(id _Nullable)defaultValue SWIFT_UNAVAILABLE;
@end

@protocol UserWiseEventDelegate;
@class GameEvent;

/// EventsModule
/// Central interface used when working with UserWise events.
SWIFT_CLASS("_TtC11UserWiseSDK12EventsModule")
@interface EventsModule : NSObject
@property (nonatomic, strong) id <UserWiseEventDelegate> _Nullable offerDelegate;
- (NSArray<GameEvent *> * _Nonnull)getAllActive SWIFT_WARN_UNUSED_RESULT;
- (NSArray<GameEvent *> * _Nonnull)getAllUpcoming SWIFT_WARN_UNUSED_RESULT;
- (GameEvent * _Nullable)getEventById:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
- (GameEvent * _Nullable)getEventByExternalId:(NSString * _Nonnull)externalId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_PROTOCOL_NAMED("UserWiseStateDelegate")
@protocol UserWiseStateDelegate
- (void)onStartWithSessionInitialized:(BOOL)sessionInitialized;
- (void)onSessionInitializationAttemptFailed;
- (void)onSessionInitializedWithSessionId:(NSString * _Nonnull)sessionId;
- (void)onStop;
@end


@interface EventsModule (SWIFT_EXTENSION(UserWiseSDK)) <UserWiseStateDelegate>
- (void)onSessionInitializationAttemptFailed;
- (void)onSessionInitializedWithSessionId:(NSString * _Nonnull)sessionId;
- (void)onStartWithSessionInitialized:(BOOL)sessionInitialized;
- (void)onStop;
@end


SWIFT_CLASS_NAMED("FileVariable")
@interface FileVariable : Variable
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)getValue SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name type:(enum VariableType)type defaultValue:(id _Nullable)defaultValue SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("FloatVariable")
@interface FloatVariable : Variable
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name defaultValue:(float)defaultValue OBJC_DESIGNATED_INITIALIZER;
- (float)getValue SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name type:(enum VariableType)type defaultValue:(id _Nullable)defaultValue SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("GameEvent")
@interface GameEvent : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull data;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull external_id;
@property (nonatomic, readonly, copy) NSString * _Nonnull external_event_type;
@property (nonatomic, readonly, copy) NSDate * _Nullable start_at;
@property (nonatomic, readonly, copy) NSString * _Nonnull start_at_tz;
@property (nonatomic, readonly, copy) NSDate * _Nullable end_at;
@property (nonatomic, readonly, copy) NSString * _Nonnull end_at_tz;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("IntegerVariable")
@interface IntegerVariable : Variable
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name defaultValue:(NSInteger)defaultValue OBJC_DESIGNATED_INITIALIZER;
- (NSInteger)getValue SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name type:(enum VariableType)type defaultValue:(id _Nullable)defaultValue SWIFT_UNAVAILABLE;
@end

@class MediaVariant;

SWIFT_CLASS_NAMED("MediaInfo")
@interface MediaInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull content_type;
@property (nonatomic, readonly, copy) NSString * _Nonnull url;
@property (nonatomic, readonly) NSInteger byte_size;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, MediaVariant *> * _Nullable variants;
@end


SWIFT_CLASS_NAMED("MediaVariant")
@interface MediaVariant : NSObject
@property (nonatomic, readonly) NSInteger max_height;
@property (nonatomic, readonly) NSInteger max_width;
@property (nonatomic, readonly, copy) NSString * _Nonnull url;
@end


SWIFT_CLASS_NAMED("Message")
@interface Message : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSString * _Nonnull body;
@property (nonatomic, readonly, copy) NSString * _Nonnull portraitImageId;
@property (nonatomic, readonly, copy) NSString * _Nonnull landscapeImageId;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull additionalFields;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol UserWiseMessageDelegate;

/// MessagesModule
/// Central interface used when working with UserWise messages
SWIFT_CLASS_NAMED("MessagesModule")
@interface MessagesModule : NSObject
@property (nonatomic, strong) id <UserWiseMessageDelegate> _Nullable messageDelegate;
- (NSArray<Message *> * _Nonnull)getAllActive SWIFT_WARN_UNUSED_RESULT;
- (NSArray<Message *> * _Nonnull)getAllUpcoming SWIFT_WARN_UNUSED_RESULT;
- (Message * _Nullable)getMessageById:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
- (void)setMessageAsViewedWithMessage:(Message * _Nonnull)message;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface MessagesModule (SWIFT_EXTENSION(UserWiseSDK)) <UserWiseStateDelegate>
- (void)onSessionInitializationAttemptFailed;
- (void)onStartWithSessionInitialized:(BOOL)sessionInitialized;
- (void)onSessionInitializedWithSessionId:(NSString * _Nonnull)sessionId;
- (void)onStop;
@end


SWIFT_CLASS_NAMED("Offer")
@interface Offer : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSString * _Nonnull body;
@property (nonatomic, readonly, copy) NSString * _Nonnull portraitImageId;
@property (nonatomic, readonly, copy) NSString * _Nonnull landscapeImageId;
@property (nonatomic, readonly) double cost;
@property (nonatomic, readonly, copy) NSString * _Nonnull iOSProductId;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSNumber *> * _Nonnull currencies;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSNumber *> * _Nonnull items;
@property (nonatomic, readonly, copy) NSDate * _Nullable start_at;
@property (nonatomic, readonly, copy) NSString * _Nonnull start_at_tz;
@property (nonatomic, readonly, copy) NSDate * _Nullable end_at;
@property (nonatomic, readonly, copy) NSString * _Nonnull end_at_tz;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum OfferImpressionState : NSInteger;

SWIFT_CLASS_NAMED("OfferImpression")
@interface OfferImpression : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum OfferImpressionState state;
@property (nonatomic, readonly, strong) Offer * _Nonnull offer;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, OfferImpressionState, "OfferImpressionState", open) {
  OfferImpressionStateInitialized = 0,
  OfferImpressionStateViewed = 1,
  OfferImpressionStateDismissed = 2,
  OfferImpressionStateAccepted = 3,
  OfferImpressionStatePurchaseFailed = 4,
  OfferImpressionStatePurchased = 5,
  OfferImpressionStateUnknown = 6,
};

@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC11UserWiseSDK20OfferPopupController")
@interface OfferPopupController : UIViewController
+ (OfferPopupController * _Nonnull)loadControllerWithOfferImpression:(OfferImpression * _Nullable)offerImpression offerUrl:(NSString * _Nonnull)offerUrl SWIFT_WARN_UNUSED_RESULT;
- (void)loadView;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS_NAMED("OfferPopupManager")
@interface OfferPopupManager : NSObject
+ (OfferPopupController * _Nullable)showOfferWithOfferImpression:(OfferImpression * _Nullable)offerImpression offerUrl:(NSString * _Nonnull)offerUrl SWIFT_WARN_UNUSED_RESULT;
+ (void)hideOffer;
+ (BOOL)isAnOfferDisplayed SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, OfferViewAttemptFailedReason, "OfferViewAttemptFailedReason", open) {
  OfferViewAttemptFailedReasonOfferAlreadyActive = 0,
  OfferViewAttemptFailedReasonServerError = 1,
};

@protocol UserWiseOfferDelegate;

/// OffersModulue
/// Central interface used when working with UserWise offerss.
SWIFT_CLASS("_TtC11UserWiseSDK12OffersModule")
@interface OffersModule : NSObject
@property (nonatomic, strong) id <UserWiseOfferDelegate> _Nullable offerDelegate;
- (NSArray<Offer *> * _Nonnull)getAllActive SWIFT_WARN_UNUSED_RESULT;
- (NSArray<Offer *> * _Nonnull)getAllUpcoming SWIFT_WARN_UNUSED_RESULT;
- (Offer * _Nullable)getOfferById:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isAnOfferActive SWIFT_WARN_UNUSED_RESULT;
- (void)initializeOfferImpressionWithOffer:(Offer * _Nonnull)offer;
- (void)updateOfferImpressionStateWithOfferImpression:(OfferImpression * _Nonnull)offerImpression newState:(enum OfferImpressionState)newState;
- (void)showOfferWithOfferImpression:(OfferImpression * _Nonnull)offerImpression;
- (void)dismissOfferWithOfferImpression:(OfferImpression * _Nullable)offerImpression;
- (void)acceptOfferWithOfferImpression:(OfferImpression * _Nullable)offerImpression;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface OffersModule (SWIFT_EXTENSION(UserWiseSDK)) <UserWiseStateDelegate>
- (void)onSessionInitializationAttemptFailed;
- (void)onSessionInitializedWithSessionId:(NSString * _Nonnull)sessionId;
- (void)onStartWithSessionInitialized:(BOOL)sessionInitialized;
- (void)onStop;
@end


SWIFT_CLASS_NAMED("StringVariable")
@interface StringVariable : Variable
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name defaultValue:(NSString * _Nullable)defaultValue OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)getValue SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name type:(enum VariableType)type defaultValue:(id _Nullable)defaultValue SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("Survey")
@interface Survey : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) NSInteger questionsCount;
@property (nonatomic, readonly, copy) NSDate * _Nullable start_at;
@property (nonatomic, readonly, copy) NSString * _Nonnull start_at_tz;
@property (nonatomic, readonly, copy) NSDate * _Nullable end_at;
@property (nonatomic, readonly, copy) NSString * _Nonnull end_at_tz;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIColor;
@class UIImage;

SWIFT_CLASS("_TtC11UserWiseSDK24SurveySplashScreenStyles")
@interface SurveySplashScreenStyles : NSObject
@property (nonatomic, strong) UIColor * _Nullable primaryColor;
@property (nonatomic, strong) UIColor * _Nonnull splashScreenBackgroundColor;
@property (nonatomic, strong) UIImage * _Nullable logo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11UserWiseSDK23SurveyWebViewController")
@interface SurveyWebViewController : UIViewController
+ (void)loadControllerWithSurvey:(Survey * _Nonnull)survey surveyUrl:(NSString * _Nonnull)surveyUrl splashScreenStyles:(SurveySplashScreenStyles * _Nonnull)splashScreenStyles responseId:(NSString * _Nonnull)responseId;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



@protocol UserWiseSurveyDelegate;

/// SurveysModule
/// Central interface used when working with UserWise surveys & polls..
SWIFT_CLASS_NAMED("SurveysModule")
@interface SurveysModule : NSObject
@property (nonatomic, readonly, strong) SurveySplashScreenStyles * _Nonnull styleConfiguration;
@property (nonatomic, strong) id <UserWiseSurveyDelegate> _Nullable surveyDelegate;
@property (nonatomic) BOOL isTakingSurvey;
- (NSArray<Survey *> * _Nonnull)getAllActive SWIFT_WARN_UNUSED_RESULT;
- (NSArray<Survey *> * _Nonnull)getAllUpcoming SWIFT_WARN_UNUSED_RESULT;
- (Survey * _Nullable)getSurveyById:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
- (void)setSplashScreenLogo:(UIImage * _Nonnull)logo;
- (void)setColorsWithPrimaryColor:(UIColor * _Nullable)primaryColor splashScreenBackgroundColor:(UIColor * _Nullable)splashScreenBackgroundColor;
- (void)initializeSurveyInviteWithSurvey:(Survey * _Nonnull)survey;
- (void)initializeSurveyInviteWithSurvey:(Survey * _Nonnull)survey responseId:(NSString * _Nonnull)responseId;
- (void)setSurveyInviteResponseWithSurvey:(Survey * _Nonnull)survey responseId:(NSString * _Nonnull)responseId inviteId:(NSString * _Nonnull)inviteId wasAccepted:(BOOL)wasAccepted;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface SurveysModule (SWIFT_EXTENSION(UserWiseSDK)) <UserWiseStateDelegate>
- (void)onSessionInitializationAttemptFailed;
- (void)onSessionInitializedWithSessionId:(NSString * _Nonnull)sessionId;
- (void)onStartWithSessionInitialized:(BOOL)sessionInitialized;
- (void)onStop;
@end




@class VariablesModule;
@protocol UserWiseMediaInfoDelegate;
@protocol UserWiseMediaRawDataHandler;

SWIFT_CLASS_NAMED("UserWise")
@interface UserWise : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull sdkVersion;
@property (nonatomic, copy) NSArray<id <UserWiseStateDelegate>> * _Nonnull stateDelegates;
@property (nonatomic, readonly, strong) SurveysModule * _Nullable surveysModule;
@property (nonatomic, readonly, strong) OffersModule * _Nullable offersModule;
@property (nonatomic, readonly, strong) MessagesModule * _Nullable messagesModule;
@property (nonatomic, readonly, strong) VariablesModule * _Nullable variablesModule;
@property (nonatomic, readonly, strong) EventsModule * _Nullable eventsModule;
@property (nonatomic, readonly) BOOL isRunning;
@property (nonatomic, copy) NSURL * _Nullable hostOverride;
@property (nonatomic) BOOL debugMode;
- (void)setApiKey:(NSString * _Nonnull)apiKey;
@property (nonatomic, copy) NSString * _Nullable userId;
@property (nonatomic, copy) NSString * _Nullable sessionId;
- (UserWise * _Nonnull)initializeWithApiKey:(NSString * _Nonnull)apiKey userId:(NSString * _Nonnull)userId SWIFT_WARN_UNUSED_RESULT;
- (void)onStart;
- (void)onStop;
- (BOOL)isSessionInitialized SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isAnyContentActive SWIFT_WARN_UNUSED_RESULT;
- (void)getMediaWithMediaId:(NSString * _Nonnull)mediaId handler:(id <UserWiseMediaInfoDelegate> _Nonnull)handler;
- (void)loadBitMapFromMediaId:(NSString * _Nonnull)mediaId ignoreCache:(BOOL)ignoreCache handler:(id <UserWiseMediaRawDataHandler> _Nonnull)handler;
- (void)loadBitMapFromUrl:(NSString * _Nonnull)url ignoreCache:(BOOL)ignoreCache handler:(id <UserWiseMediaRawDataHandler> _Nonnull)handler;
- (void)assignEvent:(NSString * _Nonnull)eventName attributes:(NSDictionary<NSString *, id> * _Nullable)attributes;
- (void)setAttributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UserWise * _Nonnull sharedInstance;)
+ (UserWise * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Implementation interface for the UserWise offer’s module events.  This interface allows hooking into any
/// parts of the offer events flow.  At a minimum, onOfferAvailable <em>MUST</em> be implemented.
SWIFT_PROTOCOL_NAMED("UserWiseEventDelegate")
@protocol UserWiseEventDelegate
/// Called once events have been loaded from either the API or local cache
- (void)onEventsLoadedFromCache:(BOOL)fromCache;
/// Called when an event has been loaded and is active
/// Likely:  Called when an event becomes active within the SDK
- (void)onEventActiveWithEvent:(GameEvent * _Nonnull)event;
@end


SWIFT_PROTOCOL_NAMED("UserWiseMediaInfoDelegate")
@protocol UserWiseMediaInfoDelegate
- (void)onSuccessWithMediaInfo:(MediaInfo * _Nonnull)mediaInfo;
- (void)onFailure;
@end


SWIFT_PROTOCOL_NAMED("UserWiseMediaRawDataHandler")
@protocol UserWiseMediaRawDataHandler
- (void)onMediaDownloadSuccessWithData:(NSData * _Nonnull)data;
- (void)onMediaDownloadFailure;
@end


SWIFT_PROTOCOL_NAMED("UserWiseMessageDelegate")
@protocol UserWiseMessageDelegate
/// Called once message(s) have been loaded from either the API or local cache
- (void)onMessagesLoadedFromCache:(BOOL)fromCache;
/// Called when message(s) are available for the appuser.
- (void)onMessageAvailableWithMessage:(Message * _Nonnull)message;
@end


/// Implementation interface for the UserWise offer’s module events.  This interface allows hooking into any
/// parts of the offer events flow.  At a minimum, onOfferAvailable <em>MUST</em> be implemented.
SWIFT_PROTOCOL_NAMED("UserWiseOfferDelegate")
@protocol UserWiseOfferDelegate
- (void)onOffersLoaded;
/// Called after a poll attempt that returns <em>NO</em> available offers.
- (void)onOfferUnavailable;
/// Called after a poll attempt that returns an available offer.
- (void)onOfferAvailableWithOffer:(Offer * _Nonnull)offer;
/// Called when an offer impression initialization request fails.
- (void)onOfferImpressionInitializationFailedWithOffer:(Offer * _Nonnull)offer;
/// Called when an offer impression has been successfully initialized
- (void)onOfferImpressionInitialized:(OfferImpression * _Nonnull)offerImpression;
/// Called once the offer’s WebView has successfully loaded, and is being displayed
- (void)onOfferViewedWithOfferImpression:(OfferImpression * _Nullable)offerImpression;
/// Called if UserWise failed to load the offer
- (void)onOfferViewAttemptFailedWithOfferImpression:(OfferImpression * _Nullable)offerImpression reason:(enum OfferViewAttemptFailedReason)reason;
/// Called when the offer WebView has been dismissed (only when <em>NOT</em> accepted);
- (void)onOfferDismissedWithOfferImpression:(OfferImpression * _Nullable)offerImpression;
/// Called whent he offer WebView accept CTA has been tapped.
- (void)onOfferAcceptedWithOfferImpression:(OfferImpression * _Nullable)offerImpression;
@end



SWIFT_PROTOCOL_NAMED("UserWiseSurveyDelegate")
@protocol UserWiseSurveyDelegate
- (void)onSurveysLoaded;
/// Called when survey(s) are available for the appuser.
- (void)onSurveyAvailableWithSurvey:(Survey * _Nonnull)survey;
/// Called when the survey invite initialization was processed.
- (void)onSurveyInviteInitializedWithSurvey:(Survey * _Nonnull)survey wasInitialized:(BOOL)wasInitialized responseId:(NSString * _Nullable)responseId inviteId:(NSString * _Nullable)inviteId;
/// Called when the app user is entering into our survey user flow.
- (void)onSurveyEnteredWithSurvey:(Survey * _Nonnull)survey responseId:(NSString * _Nonnull)responseId;
/// Called when survey failed to load.
- (void)onSurveyEnterFailedWithSurvey:(Survey * _Nonnull)survey responseId:(NSString * _Nonnull)responseId;
/// Called when the user has exited our survey user flow. May or may not be accompanied by onSurveyCompleted()
- (void)onSurveyClosedWithSurvey:(Survey * _Nonnull)survey responseId:(NSString * _Nonnull)responseId;
/// Called when the user has successfully completed a survey
- (void)onSurveyCompletedWithSurvey:(Survey * _Nonnull)survey responseId:(NSString * _Nonnull)responseId;
@end


SWIFT_CLASS_NAMED("UserWiseUtility")
@interface UserWiseUtility : NSObject
+ (NSString * _Nullable)getCountry SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getOsVersion SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getPhoneCarrier SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getDeviceType SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getTimeZoneIdentifier SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getIDFA SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getLanguage SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getConnectionType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL_NAMED("UserWiseVariablesDelegate")
@protocol UserWiseVariablesDelegate
- (void)onVariablesLoadedFromCache:(BOOL)fromCache;
@end


typedef SWIFT_ENUM_NAMED(NSInteger, VariableType, "VariableType", open) {
  VariableTypeString = 0,
  VariableTypeInteger = 1,
  VariableTypeFloat = 2,
  VariableTypeDatetime = 3,
  VariableTypeBoolean = 4,
  VariableTypeFile = 5,
};


SWIFT_CLASS("_TtC11UserWiseSDK15VariablesModule")
@interface VariablesModule : NSObject
@property (nonatomic, strong) id <UserWiseVariablesDelegate> _Nullable variablesDelegate;
- (Variable * _Nullable)getVariableDefinitionWithName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (BOOL)defineWithVariables:(NSArray<Variable *> * _Nonnull)variables error:(NSError * _Nullable * _Nullable)error;
- (Variable * _Nullable)defineVariableWithName:(NSString * _Nonnull)name type:(enum VariableType)type defaultValue:(id _Nullable)defaultValue error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (Variable * _Nullable)define:(Variable * _Nonnull)variable error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getModuleName SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface VariablesModule (SWIFT_EXTENSION(UserWiseSDK)) <UserWiseStateDelegate>
- (void)onStartWithSessionInitialized:(BOOL)sessionInitialized;
- (void)onSessionInitializationAttemptFailed;
- (void)onSessionInitializedWithSessionId:(NSString * _Nonnull)sessionId;
- (void)onStop;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
